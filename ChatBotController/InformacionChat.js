require("dotenv").config();
const fetch = require('node-fetch');

const db = require("../db");

async function obtenerProductos() {
    try {
        const [rows] = await db.query(`
            SELECT 
                p.referencia,
                p.nombre,
                p.precio_unidad,
                p.stock,
                p.marca,
                c.nombre_categoria,
                s.nombre_subcategoria
            FROM producto p
            INNER JOIN categoria c ON p.FK_id_categoria = c.id_categoria
            INNER JOIN subcategoria s ON p.FK_id_subcategoria = s.id_subcategoria
            WHERE p.stock > 0
        `);
        return rows;
    } catch (error) {
        console.error("Error al obtener productos:", error);
        throw error;
    }
}

async function infoChat(req, res) {
    const { message } = req.body;

    try {
        const inventario = await obtenerProductos();
        const respuesta = await getChatResponse(message, inventario);
        res.json({ respuesta });
    } catch (err) {
        console.error("Error general:", err);
        res.status(500).json({ error: "Error al procesar la solicitud" });
    }
}

// Funci√≥n para obtener modelos disponibles
async function obtenerModelosDisponibles() {
    try {
        const response = await fetch("https://openrouter.ai/api/v1/models", {
            headers: {
                "Authorization": `Bearer ${process.env.OPENROUTER_API_KEY}`,
                "Content-Type": "application/json"
            }
        });

        if (!response.ok) {
            console.error("‚ùå Error al obtener modelos:", response.status);
            return null;
        }

        const data = await response.json();
        const modelos = data.data.map(model => model.id);
        console.log("‚úÖ Modelos disponibles encontrados:", modelos.slice(0, 10)); // Mostrar solo los primeros 10
        return modelos;
    } catch (error) {
        console.error("‚ùå Error al consultar modelos:", error);
        return null;
    }
}

// Funci√≥n para seleccionar el mejor modelo disponible
async function seleccionarModelo() {
    const modelos = await obtenerModelosDisponibles();
    
    if (!modelos) {
        console.log("‚ö†Ô∏è No se pudieron obtener modelos, usando modelo por defecto");
        return "gpt-3.5-turbo"; // Fallback b√°sico
    }

    // Lista de modelos preferidos en orden de preferencia
    const modelosPreferidos = [
        "openai/gpt-4o-mini",
        "openai/gpt-4o",
        "openai/gpt-3.5-turbo",
        "anthropic/claude-3-haiku",
        "google/gemini-pro",
        "meta-llama/llama-3.1-8b-instruct:free",
        "microsoft/wizardlm-2-8x22b:free",
        "google/gemma-2-9b-it:free",
        "nousresearch/hermes-3-llama-3.1-405b:free",
        "qwen/qwen-2-7b-instruct:free"
    ];

    // Buscar el primer modelo disponible
    for (const modelo of modelosPreferidos) {
        if (modelos.includes(modelo)) {
            console.log(`‚úÖ Usando modelo: ${modelo}`);
            return modelo;
        }
    }

    // Si no encuentra ninguno preferido, usar el primer modelo disponible
    const primerModelo = modelos[0];
    console.log(`‚ö†Ô∏è Usando primer modelo disponible: ${primerModelo}`);
    return primerModelo;
}

async function getChatResponse(message, inventario) {
    const infoEmpresa = `El aplicativo de Accesorios Apolo ser√° una herramienta integral pensada para modernizar y agilizar 
la gesti√≥n del negocio. Permitir√° organizar y controlar de forma eficiente el inventario, registrar 
las ventas de manera detallada, administrar la base de datos de clientes y mostrar un cat√°logo 
digital atractivo. Todo esto estar√° centralizado en un panel administrativo intuitivo que facilitar√° 
el an√°lisis de datos y la toma de decisiones. Con este aplicativo, Accesorios Apolo podr√° optimizar 
sus procesos, ofrecer una mejor experiencia a sus clientes y fortalecer su presencia en el entorno digital.

Ubicaci√≥n: Accesorios Apolo est√° ubicado en Montenegro, Quind√≠o. Direcci√≥n: Cra. 6 #21-28.

Horarios de atenci√≥n:
Lunes a sabado: 9:00 AM - 07:00 PM. 
Domingos y festivos: No hay atenci√≥n.

Informaci√≥n de contacto:
Tel√©fono: 323 326 4572.
Correo electr√≥nico: accesoriosapolom@gmail.com
Instagram: @accesoriosapolom
Facebook: Accesories Apolo  

Administrador y due√±o actual: Herney Restrepo Ortiz.

Misi√≥n:
En nuestra empresa de accesorios para motos, nos comprometemos a proporcionar productos de alta calidad 
que potencien la experiencia de los motociclistas, garantizando seguridad, comodidad y estilo. Nos esforzamos 
por ofrecer una amplia gama de accesorios innovadores y funcionales, respaldados por un compromiso inquebrantable 
con la excelencia en el dise√±o, la fabricaci√≥n y la satisfacci√≥n del cliente.  
Nuestro prop√≥sito es no solo equipar a los motociclistas con accesorios superiores, sino tambi√©n promover una 
cultura de seguridad en la conducci√≥n, creando as√≠ una comunidad comprometida con la pasi√≥n por las motos y el 
respeto por la carretera.

Visi√≥n:
Nos visualizamos como l√≠deres en la industria de accesorios para motos, siendo reconocidos a nivel nacional 
e internacional por nuestra innovaci√≥n, calidad y compromiso con la seguridad. Buscamos expandir continuamente 
nuestra gama de productos, utilizando tecnolog√≠as avanzadas y materiales de vanguardia para brindar soluciones 
que excedan las expectativas de nuestros clientes.

Aspiramos a ser un referente en la comunidad motociclista, no solo por nuestros productos, sino tambi√©n por nuestro 
compromiso con la educaci√≥n vial y la promoci√≥n de la seguridad en la conducci√≥n. Queremos ser la opci√≥n preferida 
de los motociclistas, siendo su compa√±ero de confianza en cada viaje, impulsando su pasi√≥n y protegiendo su bienestar 
en la carretera.

Para registrarte en el aplicativo de Accesorios Apolo, sigue estos pasos:
1. Encontramos en la p√°gina de inicio del aplicativo la barra de navegaci√≥n superior, donde se encuentra la opcion de "Registrarse".
2. Haz clic en "Registrarse" y completa el formulario con tus datos personales: nombre, telefono, correo electr√≥nico y contrase√±a.
3. Al terminar de completar el formulario correctamente, haz clic en "Registrarse" para crear tu cuenta.
4. Recibir√°s un correo electr√≥nico con un codigo OTP de confirmaci√≥n.
5. Ingresa el c√≥digo OTP en el aplicativo para verificar tu cuenta.
6. Una vez verificado, te aparecer√° un mensaje de bienvenida y podr√°s acceder al aplicativo.

Para iniciar sesi√≥n en el aplicativo de Accesorios Apolo, sigue estos pasos:
1. En la p√°gina de inicio del aplicativo, dir√≠gete a la barra de navegaci√≥n superior
donde encontrar√°s la opci√≥n "Iniciar Sesi√≥n".
2. Haz clic en "Iniciar Sesi√≥n" y completa el formulario con tu correo electr√≥nico y contrase√±a.
3. Aseg√∫rate de que los datos sean correctos y haz clic en "Iniciar Sesi√≥n".
4. Si los datos son v√°lidos, ser√°s redirigido al panel de control del aplicativo, donde podr√°s acceder a todas las funcionalidades disponibles.

Si olvidaste tu contrase√±a, puedes restablecerla siguiendo estos pasos: 
1. En la p√°gina de inicio del aplicativo, dir√≠gete a la barra de navegaci√≥n superior y haz clic en "Iniciar Sesi√≥n".
2. En la p√°gina de inicio de sesi√≥n, encontrar√°s un enlace que dice "¬øOlvidaste tu contrase√±a?".
3. Haz clic en ese enlace y se te pedir√° que ingreses tu correo electr√≥nico asociado a tu cuenta.
4. Despu√©s de ingresar tu correo, recibir√°s un correo electr√≥nico con un enlace para restableecer tu contrase√±a.
5. Haz clic en el enlace del correo y ser√°s redirigido a una p√°gina donde podr√°s ingresar una nueva contrase√±a.
6. Ingresa tu nueva contrase√±a y conf√≠rmala.
`;

    // Verificar que la API key existe
    if (!process.env.OPENROUTER_API_KEY) {
        console.error("‚ùå OPENROUTER_API_KEY no est√° configurada en las variables de entorno");
        return "Error de configuraci√≥n del servicio de IA.";
    }

    // Log para debug (solo mostrar los primeros caracteres por seguridad)
    console.log("üîë API Key encontrada:", process.env.OPENROUTER_API_KEY.substring(0, 10) + "...");

    // Seleccionar modelo disponible
    const modeloSeleccionado = await seleccionarModelo();

    const messages = [
        {
            role: "system",
            content: `Eres un asistente virtual de Accesorios Apolo. Solo debes responder preguntas relacionadas con la empresa Accesorios Apolo, su inventario, ubicaci√≥n, misi√≥n, visi√≥n, contacto, horario o administrador.

Si te hacen una pregunta que no est√© relacionada con la empresa o su inventario, responde con:
"Lo siento, solo puedo responder preguntas relacionadas con Accesorios Apolo y su aplicativo.".

Aqu√≠ tienes informaci√≥n de referencia sobre la empresa e inventario:

${infoEmpresa}

Inventario actual:
${JSON.stringify(inventario)}`
        },
        {
            role: "user",
            content: message
        }
    ];

    try {
        const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
            method: "POST",
            headers: {
                "Authorization": `Bearer ${process.env.OPENROUTER_API_KEY}`,
                "Content-Type": "application/json",
                "HTTP-Referer": "https://accesorios-apolo-frontend.vercel.app", // Opcional: tu dominio
                "X-Title": "AccesoriosApolo" // Opcional: nombre de tu app
            },
            body: JSON.stringify({
                model: modeloSeleccionado, // ‚úÖ Modelo seleccionado din√°micamente
                messages,
                max_tokens: 500,
                temperature: 0.7
            })
        });

        // Verificar el status de la respuesta
        if (!response.ok) {
            console.error("‚ùå Error HTTP:", response.status, response.statusText);
            const errorText = await response.text();
            console.error("‚ùå Error body:", errorText);
            return "Error al conectar con el servicio de IA.";
        }

        const data = await response.json();
        console.log("‚úÖ Respuesta recibida:", data);

        if (data?.error) {
            console.error("‚ùå Error en respuesta IA:", data.error);
            return "Ocurri√≥ un error con el servicio de IA.";
        }

        const respuestaIA = data.choices?.[0]?.message?.content?.trim();
        return respuestaIA?.length >= 5 ? respuestaIA : "No entend√≠ tu pregunta. ¬øPodr√≠as reformularla?";
    } catch (err) {
        console.error("‚ùå Error general en getChatResponse:", err.message || err);
        return "Error al procesar la respuesta con IA.";
    }
}

module.exports = {
    infoChat
};